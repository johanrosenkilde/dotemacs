(define-derived-mode mtg-list-mode nil "mtg"
  "Major mode writing MTG lists. Open motl list in one buffer and activate this
mode, and write in another also with this mode, then word completion works for
complete card names"
  (set (make-local-variable 'mtg-mode-variant) t)
  (set (make-local-variable 'require-final-newline)
       mode-require-final-newline)
  (set (make-local-variable 'indent-line-function) 'indent-relative)
  (modify-syntax-entry ?  "_" (syntax-table))
  (modify-syntax-entry ?\* " " (syntax-table))
  (modify-syntax-entry ?, "_" (syntax-table))
  (modify-syntax-entry ?' "_" (syntax-table))
  (modify-syntax-entry ?\( "_" (syntax-table))
  (modify-syntax-entry ?\) "_" (syntax-table))
  (modify-syntax-entry ?|  "." (syntax-table))
  (setq ac-sources (list 'ac-source-abbrev))
  (unless (string-match ".*motl.*" (buffer-name))
    (message "Remember to activate mtg-list-mode in MOTL buffer also"))
  ;;(define-key evil-insert-state-local-map (kbd "<return>") 'evil-ret)
  )
(setq mtg-counted-card-matcher "^[[:digit:]]* \\(.*\\)")
(defun jsrn-mtg-lookup-card-in-motl-buffer ()
  (interactive)
  (let* ((card-counted (current-word))
         (card (if (string-match mtg-counted-card-matcher card-counted)
                   (match-string 1 card-counted)
                 card-counted))
         (motl-buffer
          (find-first (buffer-list)
                      (lambda (buf)
                        (string-match ".*motl.*" (buffer-name buf))))))
    (pop-to-buffer motl-buffer)
    (goto-char (point-min))
    (search-forward card)
    ))
(defun jsrn-mtg-mode-hook ()
  (setq mtg-ac-source-counted-names (copy-list ac-source-words-in-same-mode-buffers))
  ;(add-to-list 'mtg-ac-source-counted-names '(prefix . mtg-counted-card-matcher))
  (setq ac-sources (list 'ac-source-words-in-same-mode-buffers 'mtg-ac-source-counted-names))
  (define-key mtg-list-mode-map [(f5)] 'jsrn-mtg-lookup-card-in-motl-buffer)
  (define-key mtg-list-mode-map (kbd "TAB") 'dabbrev-expand)
  (define-key mtg-list-mode-map (kbd "M-/") 'auto-complete)
  )
(add-hook 'mtg-list-mode-hook 'jsrn-mtg-mode-hook)



(message "Loaded mtg_setup.el")
(provide 'mtg_setup)
